<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>IsActive</key>
		<true/>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<false/>
						<key>MacroActionType</key>
						<string>SetVariableToText</string>
						<key>Text</key>
						<string>-</string>
						<key>Variable</key>
						<string>MMD__Default List Character</string>
					</dict>
					<dict>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<false/>
						<key>MacroActionType</key>
						<string>SetVariableToText</string>
						<key>Text</key>
						<string>\t</string>
						<key>Variable</key>
						<string>MMD__Indent Character</string>
					</dict>
					<dict>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<false/>
						<key>KeyCode</key>
						<integer>7</integer>
						<key>MacroActionType</key>
						<string>SimulateKeystroke</string>
						<key>Modifiers</key>
						<integer>256</integer>
						<key>ReleaseAll</key>
						<false/>
					</dict>
					<dict>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<false/>
						<key>MacroActionType</key>
						<string>Pause</string>
						<key>Time</key>
						<string>0.1</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
					<dict>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<false/>
						<key>MacroActionType</key>
						<string>Comment</string>
						<key>Text</key>
						<string></string>
						<key>Title</key>
						<string>Set MMD__List Character to start first character of selection</string>
					</dict>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>ClipboardConditionType</key>
									<string>Matches</string>
									<key>ClipboardText</key>
									<string>^\*{1,1}</string>
									<key>ConditionType</key>
									<string>Clipboard</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array/>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<false/>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>IsActive</key>
								<true/>
								<key>IsDisclosed</key>
								<false/>
								<key>MacroActionType</key>
								<string>SetVariableToText</string>
								<key>Text</key>
								<string>*</string>
								<key>Variable</key>
								<string>MMD__List Character</string>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>ClipboardConditionType</key>
									<string>Matches</string>
									<key>ClipboardText</key>
									<string>^\-{1,1}</string>
									<key>ConditionType</key>
									<string>Clipboard</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array/>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<false/>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>IsActive</key>
								<true/>
								<key>IsDisclosed</key>
								<true/>
								<key>MacroActionType</key>
								<string>SetVariableToText</string>
								<key>Text</key>
								<string>-</string>
								<key>Variable</key>
								<string>MMD__List Character</string>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>ClipboardConditionType</key>
									<string>Matches</string>
									<key>ClipboardText</key>
									<string>^\+{1,1}</string>
									<key>ConditionType</key>
									<string>Clipboard</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array/>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<false/>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>IsActive</key>
								<true/>
								<key>IsDisclosed</key>
								<false/>
								<key>MacroActionType</key>
								<string>SetVariableToText</string>
								<key>Text</key>
								<string>+</string>
								<key>Variable</key>
								<string>MMD__List Character</string>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>ClipboardConditionType</key>
									<string>Matches</string>
									<key>ClipboardText</key>
									<string>^[0-9]{1,1}</string>
									<key>ConditionType</key>
									<string>Clipboard</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array/>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<false/>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>IsActive</key>
								<true/>
								<key>IsDisclosed</key>
								<false/>
								<key>MacroActionType</key>
								<string>SetVariableToText</string>
								<key>Text</key>
								<string>number</string>
								<key>Variable</key>
								<string>MMD__List Character</string>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
					<dict>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<false/>
						<key>MacroActionType</key>
						<string>Comment</string>
						<key>Text</key>
						<string></string>
						<key>Title</key>
						<string>Find out what kind of list we have and re-indent based on first character</string>
					</dict>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>ConditionType</key>
									<string>Variable</string>
									<key>Variable</key>
									<string>MMD__List Character</string>
									<key>VariableConditionType</key>
									<string>Matches</string>
									<key>VariableValue</key>
									<string>[-\+\*]</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>IsActive</key>
								<true/>
								<key>IsDisclosed</key>
								<false/>
								<key>MacroActionType</key>
								<string>Comment</string>
								<key>Text</key>
								<string></string>
								<key>Title</key>
								<string>List is numbered list</string>
							</dict>
							<dict>
								<key>Conditions</key>
								<dict>
									<key>ConditionList</key>
									<array>
										<dict>
											<key>ConditionType</key>
											<string>Variable</string>
											<key>Variable</key>
											<string>MMD__List Character</string>
											<key>VariableConditionType</key>
											<string>Is</string>
											<key>VariableValue</key>
											<string>number</string>
										</dict>
									</array>
									<key>ConditionListMatch</key>
									<string>All</string>
								</dict>
								<key>ElseActions</key>
								<array>
									<dict>
										<key>IsActive</key>
										<true/>
										<key>IsDisclosed</key>
										<false/>
										<key>MacroActionType</key>
										<string>Comment</string>
										<key>Text</key>
										<string></string>
										<key>Title</key>
										<string>List does not appear to be a list yet. Use default.</string>
									</dict>
									<dict>
										<key>Action</key>
										<string>CaseSensitiveRegEx</string>
										<key>IsActive</key>
										<true/>
										<key>IsDisclosed</key>
										<true/>
										<key>MacroActionType</key>
										<string>SearchReplaceClipboard</string>
										<key>Replace</key>
										<string>$1%Variable%MMD__Default List Character% $2</string>
										<key>Search</key>
										<string>((?m)^\s*)[\*\-\+\d\.]*\s*(.*)</string>
										<key>TargetNamedClipboardRedundantDisplayName</key>
										<string>Default Clipboard</string>
										<key>TargetNamedClipboardUID</key>
										<string>651180CD-B7B4-431C-A3A1-B987070A21FB</string>
										<key>TargetUseNamedClipboard</key>
										<false/>
									</dict>
								</array>
								<key>IsActive</key>
								<true/>
								<key>IsDisclosed</key>
								<true/>
								<key>MacroActionType</key>
								<string>IfThenElse</string>
								<key>ThenActions</key>
								<array>
									<dict>
										<key>IsActive</key>
										<true/>
										<key>IsDisclosed</key>
										<false/>
										<key>MacroActionType</key>
										<string>Comment</string>
										<key>Text</key>
										<string></string>
										<key>Title</key>
										<string>List is list already, replace with right list character.</string>
									</dict>
									<dict>
										<key>Action</key>
										<string>CaseSensitiveRegEx</string>
										<key>IsActive</key>
										<true/>
										<key>IsDisclosed</key>
										<false/>
										<key>MacroActionType</key>
										<string>SearchReplaceClipboard</string>
										<key>Replace</key>
										<string>$1$3</string>
										<key>Search</key>
										<string>((?m)^\s*)([\*\-\+\d\.]*\s?)(.*)</string>
										<key>TargetNamedClipboardRedundantDisplayName</key>
										<string>Default Clipboard</string>
										<key>TargetNamedClipboardUID</key>
										<string>651180CD-B7B4-431C-A3A1-B987070A21FB</string>
										<key>TargetUseNamedClipboard</key>
										<false/>
									</dict>
									<dict>
										<key>IsActive</key>
										<true/>
										<key>IsDisclosed</key>
										<false/>
										<key>MacroActionType</key>
										<string>SetVariableToText</string>
										<key>Text</key>
										<string>%CurrentClipboard%</string>
										<key>Variable</key>
										<string>MMD__Ordered List</string>
									</dict>
									<dict>
										<key>ClipboardTargetNamedClipboardRedundantDisplayName</key>
										<string>Default Clipboard</string>
										<key>ClipboardTargetNamedClipboardUID</key>
										<string>651180CD-B7B4-431C-A3A1-B987070A21FB</string>
										<key>ClipboardTargetUseNamedClipboard</key>
										<false/>
										<key>DisplayKind</key>
										<string>Clipboard</string>
										<key>IsActive</key>
										<true/>
										<key>IsDisclosed</key>
										<false/>
										<key>MacroActionType</key>
										<string>ExecuteShellScript</string>
										<key>Path</key>
										<string></string>
										<key>Text</key>
										<string>#!/usr/bin/php

&lt;?php

// Change this to your preferred indentation style. Use '\t' for tabs.

$indentation = $_ENV["KMVAR_MMD__Indent_Character"];
$list = $_ENV["KMVAR_MMD__Ordered_List"];

function parse_simple_list($list, $indentation)
{
  $result = array();
  $path = array();

  foreach (explode("\n", $list) as $line)
  {
    $depth = 0;
    while (substr($line, 0, strlen($indentation)) === $indentation)
    {
      $depth += 1;
      $line = substr($line, strlen($indentation));
    }

    while ($depth &lt; sizeof($path))
    {
      array_pop($path);
    }

    $path[$depth] = $line;

    $parent =&amp; $result;
    foreach ($path as $depth =&gt; $key)
    {
      if (!isset($parent[$key]))
      {
        $parent[$line] = array();
        break;
      }

      $parent =&amp; $parent[$key];
    }
  }

  return $result;
}

function traverse_array($array, $depth, $indentation)
{
  $prefix = (!$depth)? '': str_repeat("$indentation", $depth);
  $counter = 0;
  foreach($array as $key=&gt;$value)
  {
    echo $prefix.++$counter.". ".$key."\n";
    if(is_array($value) &amp;&amp; count($value))
    {
      traverse_array($value, $depth + 1, $indentation);
    }
  }
}

$parsed_list = parse_simple_list($list, $indentation);
traverse_array($parsed_list, 0, $indentation);
</string>
										<key>TimeOutAbortsMacro</key>
										<true/>
										<key>TrimResults</key>
										<false/>
										<key>TrimResultsNew</key>
										<false/>
										<key>UseText</key>
										<true/>
									</dict>
									<dict>
										<key>IsActive</key>
										<true/>
										<key>IsDisclosed</key>
										<false/>
										<key>MacroActionType</key>
										<string>Comment</string>
										<key>Text</key>
										<string></string>
										<key>Title</key>
										<string>Removes blank line from shell script</string>
									</dict>
									<dict>
										<key>Action</key>
										<string>CaseSensitiveRegEx</string>
										<key>IsActive</key>
										<true/>
										<key>IsDisclosed</key>
										<true/>
										<key>MacroActionType</key>
										<string>SearchReplaceClipboard</string>
										<key>Replace</key>
										<string></string>
										<key>Search</key>
										<string>\A[\n\r]*|[\n\r]*\Z</string>
										<key>TargetNamedClipboardRedundantDisplayName</key>
										<string>Default Clipboard</string>
										<key>TargetNamedClipboardUID</key>
										<string>651180CD-B7B4-431C-A3A1-B987070A21FB</string>
										<key>TargetUseNamedClipboard</key>
										<false/>
									</dict>
								</array>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
						</array>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<true/>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>IsActive</key>
								<true/>
								<key>IsDisclosed</key>
								<false/>
								<key>MacroActionType</key>
								<string>Comment</string>
								<key>Text</key>
								<string></string>
								<key>Title</key>
								<string>List is list already, replace with right list character.</string>
							</dict>
							<dict>
								<key>Action</key>
								<string>CaseSensitiveRegEx</string>
								<key>IsActive</key>
								<true/>
								<key>IsDisclosed</key>
								<true/>
								<key>MacroActionType</key>
								<string>SearchReplaceClipboard</string>
								<key>Replace</key>
								<string>$1%Variable%MMD__List Character% $2</string>
								<key>Search</key>
								<string>((?m)^\s*)[\*\-\+\d\.]*\s*(.*)</string>
								<key>TargetNamedClipboardRedundantDisplayName</key>
								<string>Default Clipboard</string>
								<key>TargetNamedClipboardUID</key>
								<string>651180CD-B7B4-431C-A3A1-B987070A21FB</string>
								<key>TargetUseNamedClipboard</key>
								<false/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
					<dict>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<false/>
						<key>KeyCode</key>
						<integer>9</integer>
						<key>MacroActionType</key>
						<string>SimulateKeystroke</string>
						<key>Modifiers</key>
						<integer>256</integer>
						<key>ReleaseAll</key>
						<false/>
					</dict>
					<dict>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<false/>
						<key>MacroActionType</key>
						<string>Comment</string>
						<key>Text</key>
						<string></string>
						<key>Title</key>
						<string>Delete variables</string>
					</dict>
					<dict>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<false/>
						<key>MacroActionType</key>
						<string>DeletePastClipboard</string>
						<key>PastExpression</key>
						<string>0</string>
					</dict>
					<dict>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<false/>
						<key>MacroActionType</key>
						<string>DeletePastClipboard</string>
						<key>PastExpression</key>
						<string>0</string>
					</dict>
					<dict>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<false/>
						<key>MacroActionType</key>
						<string>SetVariableToText</string>
						<key>Text</key>
						<string>%Delete%</string>
						<key>Variable</key>
						<string>MMD__Default List Character</string>
					</dict>
					<dict>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<false/>
						<key>MacroActionType</key>
						<string>SetVariableToText</string>
						<key>Text</key>
						<string>%Delete%</string>
						<key>Variable</key>
						<string>MMD__List Character</string>
					</dict>
					<dict>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<false/>
						<key>MacroActionType</key>
						<string>SetVariableToText</string>
						<key>Text</key>
						<string>%Delete%</string>
						<key>Variable</key>
						<string>MMD__Indent Character</string>
					</dict>
					<dict>
						<key>IsActive</key>
						<true/>
						<key>IsDisclosed</key>
						<false/>
						<key>MacroActionType</key>
						<string>SetVariableToText</string>
						<key>Text</key>
						<string>%Delete%</string>
						<key>Variable</key>
						<string>MMD__Ordered List</string>
					</dict>
				</array>
				<key>CustomIconData</key>
				<data>
				TU0AKgAABu6AACBQOCQUDwMXwMLQMrwMKwMUQMEwMJwM
				BwWMRmNRuOR2PR+QSGRSOSRh+wN2wN7wNsQN1wNUwN1Q
				NowN8yEAwMGwMFQMaQqBkyKQMRQMEQMJQMBSWmU2nU+o
				VGPv6Bu6BviBt6UQNaTKBsyBvaBvOBv+MzuBFKBhyBlu
				BhGdRaBgSBzmBRepXm9Xu+X2ByeBWaBPy/2OBu+BqWBu
				SBq7DQKDwK4QIxQMPwMrQMHUq/Z3PZ/QaGqQJ5QNVQNw
				wNPYeBjaBheBomBhnNZzQ7fcbndSXRgDSwJzwM7wN00G
				gQJC8cAUvd83nc/oQLezOBHuvQJRwMFwMjdro9/weHQv
				WBrqB+SBLijQMb+vxe/4fGmViBMmrwNwXKBbS7/L/P/A
				CCsAADgoFAbioE5gAKTBMAwdB7xN6qzpIGwiMLxCEMw0
				78BoIwUNxBEL5Q/EUSxM58SKYAcVgADMXABFcMJIfsaA
				AdsbgBGiTn1HiCgFH8YRYC8hyDGUTvDHUCHO4MkrzFKS
				g5KIAFRKgASitimHTLQAD1LoAHJMAAG9MccxqCMzytKR
				LzWAANTdI74TAxgsTpL8wycqAPz0ABgz6AE9MupkluCM
				tCgAcNEAAbVFgAflHAACdIz/PZXUqAAO0xOD30Q1If09
				Q9Ezwp9AT5P1SUFJYAUKMtQNTRZtUbR9IorUlKsdTAO0
				08VOABTwf1avUnpJUk+mDSdApLQdVUNXlX1iwlZ2OAFb
				UvTNdPBXlfWBUSnWJU091RQlmUTZ1HWhSVa0tXFr2xRN
				tV5bim1IX16WlcIADPfNgG3fln0hdE9lXgVq1zdjo14I
				WE22qVhJHdZX4hgimnRigADri4AHHjQAG5jsypOCWQ4k
				TuSAADeT4M6ONHGAAo5djON3ipkXNoTGbRbF6mHZnYAE
				Nn0lOCcWhY+AAIaNnDaERpQASG2GUufZQ0aloFgqhGIA
				AtrMiqbJJ369oh97DH0gauCmza3p7nSSdW2aJmW07huM
				Pblum64buu8U1u+875Eu9pAAPAgABXCABwK7JKf/FAAf
				HGgBxSzH9ySC8Pw3BATzHLcRvq/cgAB7dBx/F7eknCJ7
				hIhcHwr58cZ3Xc/0J4dl0SzcwifTAAHPdAB23OM90CxX
				oX3YLF0iRgd5AACz5YAeQzamHr6IAF36jfHk0udnYAHJ
				KoBfveb5InfEAAG/L3zO+u0pT/X6zf4YqF1ll+WJKZih
				0AAOX85hlmOm5ojISkrrFBANkzKHzl9ZWAB8QTn9tVVG
				ntYq9lkqpVWsBcqsmAGXWouuA5fFsqfXg++B5l4Iqngm
				uJVizVGLmX+rRSi6lrQdL1B9X8ISot/I+t5Y0JiSLKgr
				CpWELForpVvDGGRUoaMLhunmCC31kQ9gouNV0K4MQug1
				DBgsR4kLuhAqGERTn4vzg4SV+z+H9QJf6/9kUAoCMnA3
				FovMCYFwNeMSJ5zynmR3eg9J6gu32gAey9tyb3jtx3jm
				+UtEcCoPpAA+sU8f46khdw6h1RPXWFYdcM54gAHZDwdo
				7xzLuHdA5lARORRUHgAAeFJuSLgHBO4cqUxzzjSsOee4
				5RwTlXeyxlOU5z0qXPStl7MM3EOJiTHM9MaZEyy9zKmZ
				M8qEziNtXayQtq5TGutfSS2EfbYyltlbPNeaBH21ttSb
				F8prNAAM2Ew0gpsgWfCGao0IcTRGjAQnc0oRDTEiTjI+
				1FqayphEeYexGMZJIysXDrA2NKSYAMjZLG6fxH4EsuCj
				HSdBTF5r1h4SNZS+Qzr7X7EKDIAGBCrfpRMjjCGFQ2mj
				EyEkTimw+ikoqKi54rLTixSojsSaXFPmkRqHUEooQogt
				TeFq0oNxGp4Rin0XolwjVLDtcEJ1lwpXJUiIcL4ixZqb
				U6LkNaoUvqlCWqtRar1HiDFWpVO6vkZqeamgZHUrpTSr
				XVLKW0uh6TsYxMZWkkpnLhXVNYl02pvreRhOQAE6BYr7
				A4pzV51TiRmjVG5KUko8H1N5rbTW0WJIIklZU5yooWIK
				ka0FKkOnENsgu1tqZloSIGb0/J/T9n6thMtAaBUckDPU
				QIo5Aj23AtzMw+gAD7ECuOdkgR2yBHdubcWZZ6AAHmIF
				dQoRAiFnIOUgq6UHTpkDOsQI6gADXECacAA2VtyBPPOX
				d9vhvX3W8OGQJBAADIgAMmAAypAlkGZvba++C175GmNQ
				ao1hGJElqIElgABbjJFxtsAAuhAnEWowGbpAaH7TIDLI
				QIxBAjFECMYQIxxAsPuUwk4MnxyrsqQKIe61yDcMmiKq
				fcgRWiBEpIEV28hXywmPceSG/JCbtEMIcRAiRQ8J41M8
				gPHgACVkCJaQIl5AiY4/IETUgRNyMkBAAAAPAQAAAwAA
				AAEAQAAAAQEAAwAAAAEAQAAAAQIAAwAAAAQAAAeoAQMA
				AwAAAAEABQAAAQYAAwAAAAEAAgAAAREABAAAAAEAAAAI
				ARIAAwAAAAEAAQAAARUAAwAAAAEABAAAARYAAwAAAAEA
				QAAAARcABAAAAAEAAAblARwAAwAAAAEAAQAAAT0AAwAA
				AAEAAgAAAVIAAwAAAAEAAQAAAVMAAwAAAAQAAAewh3MA
				BwAAB6gAAAe4AAARCAAIAAgACAAIAAEAAQABAAEAAAeo
				YXBwbAIgAABtbnRyUkdCIFhZWiAH2QACABkACwAaAAth
				Y3NwQVBQTAAAAABhcHBsAAAAAAAAAAAAAAAAAAAAAAAA
				9tYAAQAAAADTLWFwcGwAAAAAAAAAAAAAAAAAAAAAAAAA
				AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtkZXNj
				AAABCAAAAG9kc2NtAAABeAAABWxjcHJ0AAAG5AAAADh3
				dHB0AAAHHAAAABRyWFlaAAAHMAAAABRnWFlaAAAHRAAA
				ABRiWFlaAAAHWAAAABRyVFJDAAAHbAAAAA5jaGFkAAAH
				fAAAACxiVFJDAAAHbAAAAA5nVFJDAAAHbAAAAA5kZXNj
				AAAAAAAAABRHZW5lcmljIFJHQiBQcm9maWxlAAAAAAAA
				AAAAAAAUR2VuZXJpYyBSR0IgUHJvZmlsZQAAAAAAAAAA
				AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
				AAAAAAAAAAAAbWx1YwAAAAAAAAAeAAAADHNrU0sAAAAo
				AAABeGhySFIAAAAoAAABoGNhRVMAAAAkAAAByHB0QlIA
				AAAmAAAB7HVrVUEAAAAqAAACEmZyRlUAAAAoAAACPHpo
				VFcAAAAWAAACZGl0SVQAAAAoAAACem5iTk8AAAAmAAAC
				omtvS1IAAAAWAAACyGNzQ1oAAAAiAAAC3mhlSUwAAAAe
				AAADAGRlREUAAAAsAAADHmh1SFUAAAAoAAADSnN2U0UA
				AAAmAAAConpoQ04AAAAWAAADcmphSlAAAAAaAAADiHJv
				Uk8AAAAkAAADomVsR1IAAAAiAAADxnB0UE8AAAAmAAAD
				6G5sTkwAAAAoAAAEDmVzRVMAAAAmAAAD6HRoVEgAAAAk
				AAAENnRyVFIAAAAiAAAEWmZpRkkAAAAoAAAEfHBsUEwA
				AAAsAAAEpHJ1UlUAAAAiAAAE0GFyRUcAAAAmAAAE8mVu
				VVMAAAAmAAAFGGRhREsAAAAuAAAFPgBWAWEAZQBvAGIA
				ZQBjAG4A/QAgAFIARwBCACAAcAByAG8AZgBpAGwARwBl
				AG4AZQByAGkBDQBrAGkAIABSAEcAQgAgAHAAcgBvAGYA
				aQBsAFAAZQByAGYAaQBsACAAUgBHAEIAIABnAGUAbgDo
				AHIAaQBjAFAAZQByAGYAaQBsACAAUgBHAEIAIABHAGUA
				bgDpAHIAaQBjAG8EFwQwBDMEMAQ7BEwEPQQ4BDkAIAQ/
				BEAEPgREBDAEOQQ7ACAAUgBHAEIAUAByAG8AZgBpAGwA
				IABnAOkAbgDpAHIAaQBxAHUAZQAgAFIAVgBCkBp1KAAg
				AFIARwBCACCCcl9pY8+P8ABQAHIAbwBmAGkAbABvACAA
				UgBHAEIAIABnAGUAbgBlAHIAaQBjAG8ARwBlAG4AZQBy
				AGkAcwBrACAAUgBHAEIALQBwAHIAbwBmAGkAbMd8vBgA
				IABSAEcAQgAg1QS4XNMMx3wATwBiAGUAYwBuAP0AIABS
				AEcAQgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAA
				UgBHAEIAIAXbBdwF3AXZAEEAbABsAGcAZQBtAGUAaQBu
				AGUAcwAgAFIARwBCAC0AUAByAG8AZgBpAGwAwQBsAHQA
				YQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYAaQBs
				Zm6QGgAgAFIARwBCACBjz4/wZYdO9k4AgiwAIABSAEcA
				QgAgMNcw7TDVMKEwpDDrAFAAcgBvAGYAaQBsACAAUgBH
				AEIAIABnAGUAbgBlAHIAaQBjA5MDtQO9A7kDugPMACAD
				wAPBA78DxgOvA7sAIABSAEcAQgBQAGUAcgBmAGkAbAAg
				AFIARwBCACAAZwBlAG4A6QByAGkAYwBvAEEAbABnAGUA
				bQBlAGUAbgAgAFIARwBCAC0AcAByAG8AZgBpAGUAbA5C
				DhsOIw5EDh8OJQ5MACAAUgBHAEIAIA4XDjEOSA4nDkQO
				GwBHAGUAbgBlAGwAIABSAEcAQgAgAFAAcgBvAGYAaQBs
				AGkAWQBsAGUAaQBuAGUAbgAgAFIARwBCAC0AcAByAG8A
				ZgBpAGkAbABpAFUAbgBpAHcAZQByAHMAYQBsAG4AeQAg
				AHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkEOAQ5ACAE
				PwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5
				BjEGSgZBACAAUgBHAEIAIAYnBkQGOQYnBkUARwBlAG4A
				ZQByAGkAYwAgAFIARwBCACAAUAByAG8AZgBpAGwAZQBH
				AGUAbgBlAHIAZQBsACAAUgBHAEIALQBiAGUAcwBrAHIA
				aQB2AGUAbABzAGV0ZXh0AAAAAENvcHlyaWdodCAyMDA3
				IEFwcGxlIEluYy4sIGFsbCByaWdodHMgcmVzZXJ2ZWQu
				AFhZWiAAAAAAAADzUgABAAAAARbPWFlaIAAAAAAAAHRN
				AAA97gAAA9BYWVogAAAAAAAAWnUAAKxzAAAXNFhZWiAA
				AAAAAAAoGgAAFZ8AALg2Y3VydgAAAAAAAAABAc0AAHNm
				MzIAAAAAAAEMQgAABd7///MmAAAHkgAA/ZH///ui///9
				owAAA9wAAMBsgAAgUDggAHsDOsDGkDDMFh0PiERiUTik
				VhzngbMgaLgbDiZ7gaCgYCi0lk0nlEpgj+gZ+gaFgcHg
				TAkcqm03nE5AEsgRAgaygZNnVDolFiqzgbmhlGplNo0Y
				gT/p1TqlFqVVrFZlFXiT/r0VGdhADOsgAC9nADotVaog
				Bt0mrkRr1xiNhGdjstnC9ptdsnVuANwilzsFisjOs1ot
				Tov1/t8lukPc2TipHywAaeZAAWzgAaGfxs5DWjwWh02N
				yOn1VO1Or11E1sEMWziq02wAdW5AAM3gAK2/18nT3D0t
				dr8Uu14xF6vmM4MlwHFuXHifJw+JveL5/Qx8W2MDwnIw
				15xV97cU6OQimzMW12+5dW73u/K3nivDT3S+37/X8/yJ
				u+/8BKiijJqUijLCOzDNM4CzPNBAaCtGDT+oc8LqvG5b
				yudCKBvS7zBuoiTrPI7LzQ6AEPorAIAQvEcMuw5sUQ87
				sVxnG8DgAhsbv2qAAKAgShR4+ykIEmQAJogSSSG06eAA
				nyHJAgSRSVJisSclyBJgiUjoSgSFoFHcrJPHyNIEjiBI
				8gaAgAAPAQAAAwAAAAEAIAAAAQEAAwAAAAEAIAAAAQIA
				AwAAAAQAABHCAQMAAwAAAAEABQAAAQYAAwAAAAEAAgAA
				AREABAAAAAEAAA9gARIAAwAAAAEAAQAAARUAAwAAAAEA
				BAAAARYAAwAAAAEAIAAAARcABAAAAAEAAAGoARwAAwAA
				AAEAAQAAAT0AAwAAAAEAAgAAAVIAAwAAAAEAAQAAAVMA
				AwAAAAQAABHKh3MABwAAB6gAABHSAAAa3AAIAAgACAAI
				AAEAAQABAAEAAAeoYXBwbAIgAABtbnRyUkdCIFhZWiAH
				2QACABkACwAaAAthY3NwQVBQTAAAAABhcHBsAAAAAAAA
				AAAAAAAAAAAAAAAA9tYAAQAAAADTLWFwcGwAAAAAAAAA
				AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
				AAAAAAAAAAtkZXNjAAABCAAAAG9kc2NtAAABeAAABWxj
				cHJ0AAAG5AAAADh3dHB0AAAHHAAAABRyWFlaAAAHMAAA
				ABRnWFlaAAAHRAAAABRiWFlaAAAHWAAAABRyVFJDAAAH
				bAAAAA5jaGFkAAAHfAAAACxiVFJDAAAHbAAAAA5nVFJD
				AAAHbAAAAA5kZXNjAAAAAAAAABRHZW5lcmljIFJHQiBQ
				cm9maWxlAAAAAAAAAAAAAAAUR2VuZXJpYyBSR0IgUHJv
				ZmlsZQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
				AAAAAAAAAAAAAAAAAAAAAAAAAAAAbWx1YwAAAAAAAAAe
				AAAADHNrU0sAAAAoAAABeGhySFIAAAAoAAABoGNhRVMA
				AAAkAAAByHB0QlIAAAAmAAAB7HVrVUEAAAAqAAACEmZy
				RlUAAAAoAAACPHpoVFcAAAAWAAACZGl0SVQAAAAoAAAC
				em5iTk8AAAAmAAAComtvS1IAAAAWAAACyGNzQ1oAAAAi
				AAAC3mhlSUwAAAAeAAADAGRlREUAAAAsAAADHmh1SFUA
				AAAoAAADSnN2U0UAAAAmAAAConpoQ04AAAAWAAADcmph
				SlAAAAAaAAADiHJvUk8AAAAkAAADomVsR1IAAAAiAAAD
				xnB0UE8AAAAmAAAD6G5sTkwAAAAoAAAEDmVzRVMAAAAm
				AAAD6HRoVEgAAAAkAAAENnRyVFIAAAAiAAAEWmZpRkkA
				AAAoAAAEfHBsUEwAAAAsAAAEpHJ1UlUAAAAiAAAE0GFy
				RUcAAAAmAAAE8mVuVVMAAAAmAAAFGGRhREsAAAAuAAAF
				PgBWAWEAZQBvAGIAZQBjAG4A/QAgAFIARwBCACAAcABy
				AG8AZgBpAGwARwBlAG4AZQByAGkBDQBrAGkAIABSAEcA
				QgAgAHAAcgBvAGYAaQBsAFAAZQByAGYAaQBsACAAUgBH
				AEIAIABnAGUAbgDoAHIAaQBjAFAAZQByAGYAaQBsACAA
				UgBHAEIAIABHAGUAbgDpAHIAaQBjAG8EFwQwBDMEMAQ7
				BEwEPQQ4BDkAIAQ/BEAEPgREBDAEOQQ7ACAAUgBHAEIA
				UAByAG8AZgBpAGwAIABnAOkAbgDpAHIAaQBxAHUAZQAg
				AFIAVgBCkBp1KAAgAFIARwBCACCCcl9pY8+P8ABQAHIA
				bwBmAGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIAaQBj
				AG8ARwBlAG4AZQByAGkAcwBrACAAUgBHAEIALQBwAHIA
				bwBmAGkAbMd8vBgAIABSAEcAQgAg1QS4XNMMx3wATwBi
				AGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsBeQF
				6AXVBeQF2QXcACAAUgBHAEIAIAXbBdwF3AXZAEEAbABs
				AGcAZQBtAGUAaQBuAGUAcwAgAFIARwBCAC0AUAByAG8A
				ZgBpAGwAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAg
				AHAAcgBvAGYAaQBsZm6QGgAgAFIARwBCACBjz4/wZYdO
				9k4AgiwAIABSAEcAQgAgMNcw7TDVMKEwpDDrAFAAcgBv
				AGYAaQBsACAAUgBHAEIAIABnAGUAbgBlAHIAaQBjA5MD
				tQO9A7kDugPMACADwAPBA78DxgOvA7sAIABSAEcAQgBQ
				AGUAcgBmAGkAbAAgAFIARwBCACAAZwBlAG4A6QByAGkA
				YwBvAEEAbABnAGUAbQBlAGUAbgAgAFIARwBCAC0AcABy
				AG8AZgBpAGUAbA5CDhsOIw5EDh8OJQ5MACAAUgBHAEIA
				IA4XDjEOSA4nDkQOGwBHAGUAbgBlAGwAIABSAEcAQgAg
				AFAAcgBvAGYAaQBsAGkAWQBsAGUAaQBuAGUAbgAgAFIA
				RwBCAC0AcAByAG8AZgBpAGkAbABpAFUAbgBpAHcAZQBy
				AHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIE
				HgQxBEkEOAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBC
				BkUGRAZBACAGKgY5BjEGSgZBACAAUgBHAEIAIAYnBkQG
				OQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAAUABy
				AG8AZgBpAGwAZQBHAGUAbgBlAHIAZQBsACAAUgBHAEIA
				LQBiAGUAcwBrAHIAaQB2AGUAbABzAGV0ZXh0AAAAAENv
				cHlyaWdodCAyMDA3IEFwcGxlIEluYy4sIGFsbCByaWdo
				dHMgcmVzZXJ2ZWQuAFhZWiAAAAAAAADzUgABAAAAARbP
				WFlaIAAAAAAAAHRNAAA97gAAA9BYWVogAAAAAAAAWnUA
				AKxzAAAXNFhZWiAAAAAAAAAoGgAAFZ8AALg2Y3VydgAA
				AAAAAAABAc0AAHNmMzIAAAAAAAEMQgAABd7///MmAAAH
				kgAA/ZH///ui///9owAAA9wAAMBsgAAgQCgQAOcFPUFC
				EFhkNh0PiEOeEFQ0FRsFOsFREFgkRj0fkEMf0FPEFeMF
				B0hlUrkLygr/hg3mQACE1ADKnAABk7AAqn0siLwoQAZN
				FiEwgrWpQAFNNAAyqAAG1TACYq1AiFKawAFddo8ML1hA
				AfsgATdnAAXtQAKNtAD6uFAAdzADguwAUd5r9Yvl9htI
				gR3wQAE+FACAxAADuLABkxwAf2RoABygAbGXACKzV7gT
				DzwAHmhAAv0gAGGnACh1V+hmeYYAH2xzgAEG1AAK3AAc
				O7AAH3wADHBAD/4mTyr25F1u8PwAAB/PAFzAYAenVAAE
				7AABPbyGSlmUAIAfvjADx82zXfpAA/9gAGPv0elUXzAD
				7+1yujA/QAI392ZMwA9z4C3AgABNA4AD9BQAPAvxnweA
				AzwkiCToElLWQwiKXIEjKBI2gcMwwkaBJLECBIOgSEoE
				hcQpCiaBIqgRGoCAAA8BAAADAAAAAQAQAAABAQADAAAA
				AQAQAAABAgADAAAABAAAG5YBAwADAAAAAQAFAAABBgAD
				AAAAAQACAAABEQAEAAAAAQAAGXoBEgADAAAAAQABAAAB
				FQADAAAAAQAEAAABFgADAAAAAQAQAAABFwAEAAAAAQAA
				AWIBHAADAAAAAQABAAABPQADAAAAAQACAAABUgADAAAA
				AQABAAABUwADAAAABAAAG56HcwAHAAAHqAAAG6YAAAAA
				AAgACAAIAAgAAQABAAEAAQAAB6hhcHBsAiAAAG1udHJS
				R0IgWFlaIAfZAAIAGQALABoAC2Fjc3BBUFBMAAAAAGFw
				cGwAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtYXBw
				bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
				AAAAAAAAAAAAAAAAAAAAC2Rlc2MAAAEIAAAAb2RzY20A
				AAF4AAAFbGNwcnQAAAbkAAAAOHd0cHQAAAccAAAAFHJY
				WVoAAAcwAAAAFGdYWVoAAAdEAAAAFGJYWVoAAAdYAAAA
				FHJUUkMAAAdsAAAADmNoYWQAAAd8AAAALGJUUkMAAAds
				AAAADmdUUkMAAAdsAAAADmRlc2MAAAAAAAAAFEdlbmVy
				aWMgUkdCIFByb2ZpbGUAAAAAAAAAAAAAABRHZW5lcmlj
				IFJHQiBQcm9maWxlAAAAAAAAAAAAAAAAAAAAAAAAAAAA
				AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABtbHVj
				AAAAAAAAAB4AAAAMc2tTSwAAACgAAAF4aHJIUgAAACgA
				AAGgY2FFUwAAACQAAAHIcHRCUgAAACYAAAHsdWtVQQAA
				ACoAAAISZnJGVQAAACgAAAI8emhUVwAAABYAAAJkaXRJ
				VAAAACgAAAJ6bmJOTwAAACYAAAKia29LUgAAABYAAALI
				Y3NDWgAAACIAAALeaGVJTAAAAB4AAAMAZGVERQAAACwA
				AAMeaHVIVQAAACgAAANKc3ZTRQAAACYAAAKiemhDTgAA
				ABYAAANyamFKUAAAABoAAAOIcm9STwAAACQAAAOiZWxH
				UgAAACIAAAPGcHRQTwAAACYAAAPobmxOTAAAACgAAAQO
				ZXNFUwAAACYAAAPodGhUSAAAACQAAAQ2dHJUUgAAACIA
				AARaZmlGSQAAACgAAAR8cGxQTAAAACwAAASkcnVSVQAA
				ACIAAATQYXJFRwAAACYAAATyZW5VUwAAACYAAAUYZGFE
				SwAAAC4AAAU+AFYBYQBlAG8AYgBlAGMAbgD9ACAAUgBH
				AEIAIABwAHIAbwBmAGkAbABHAGUAbgBlAHIAaQENAGsA
				aQAgAFIARwBCACAAcAByAG8AZgBpAGwAUABlAHIAZgBp
				AGwAIABSAEcAQgAgAGcAZQBuAOgAcgBpAGMAUABlAHIA
				ZgBpAGwAIABSAEcAQgAgAEcAZQBuAOkAcgBpAGMAbwQX
				BDAEMwQwBDsETAQ9BDgEOQAgBD8EQAQ+BEQEMAQ5BDsA
				IABSAEcAQgBQAHIAbwBmAGkAbAAgAGcA6QBuAOkAcgBp
				AHEAdQBlACAAUgBWAEKQGnUoACAAUgBHAEIAIIJyX2lj
				z4/wAFAAcgBvAGYAaQBsAG8AIABSAEcAQgAgAGcAZQBu
				AGUAcgBpAGMAbwBHAGUAbgBlAHIAaQBzAGsAIABSAEcA
				QgAtAHAAcgBvAGYAaQBsx3y8GAAgAFIARwBCACDVBLhc
				0wzHfABPAGIAZQBjAG4A/QAgAFIARwBCACAAcAByAG8A
				ZgBpAGwF5AXoBdUF5AXZBdwAIABSAEcAQgAgBdsF3AXc
				BdkAQQBsAGwAZwBlAG0AZQBpAG4AZQBzACAAUgBHAEIA
				LQBQAHIAbwBmAGkAbADBAGwAdABhAGwA4QBuAG8AcwAg
				AFIARwBCACAAcAByAG8AZgBpAGxmbpAaACAAUgBHAEIA
				IGPPj/Blh072TgCCLAAgAFIARwBCACAw1zDtMNUwoTCk
				MOsAUAByAG8AZgBpAGwAIABSAEcAQgAgAGcAZQBuAGUA
				cgBpAGMDkwO1A70DuQO6A8wAIAPAA8EDvwPGA68DuwAg
				AFIARwBCAFAAZQByAGYAaQBsACAAUgBHAEIAIABnAGUA
				bgDpAHIAaQBjAG8AQQBsAGcAZQBtAGUAZQBuACAAUgBH
				AEIALQBwAHIAbwBmAGkAZQBsDkIOGw4jDkQOHw4lDkwA
				IABSAEcAQgAgDhcOMQ5IDicORA4bAEcAZQBuAGUAbAAg
				AFIARwBCACAAUAByAG8AZgBpAGwAaQBZAGwAZQBpAG4A
				ZQBuACAAUgBHAEIALQBwAHIAbwBmAGkAaQBsAGkAVQBu
				AGkAdwBlAHIAcwBhAGwAbgB5ACAAcAByAG8AZgBpAGwA
				IABSAEcAQgQeBDEESQQ4BDkAIAQ/BEAEPgREBDgEOwRM
				ACAAUgBHAEIGRQZEBkEAIAYqBjkGMQZKBkEAIABSAEcA
				QgAgBicGRAY5BicGRQBHAGUAbgBlAHIAaQBjACAAUgBH
				AEIAIABQAHIAbwBmAGkAbABlAEcAZQBuAGUAcgBlAGwA
				IABSAEcAQgAtAGIAZQBzAGsAcgBpAHYAZQBsAHMAZXRl
				eHQAAAAAQ29weXJpZ2h0IDIwMDcgQXBwbGUgSW5jLiwg
				YWxsIHJpZ2h0cyByZXNlcnZlZC4AWFlaIAAAAAAAAPNS
				AAEAAAABFs9YWVogAAAAAAAAdE0AAD3uAAAD0FhZWiAA
				AAAAAABadQAArHMAABc0WFlaIAAAAAAAACgaAAAVnwAA
				uDZjdXJ2AAAAAAAAAAEBzQAAc2YzMgAAAAAAAQxCAAAF
				3v//8yYAAAeSAAD9kf//+6L///2jAAAD3AAAwGw=
				</data>
				<key>IsActive</key>
				<true/>
				<key>ModificationDate</key>
				<real>413403219.08587199</real>
				<key>Name</key>
				<string>25)List *, *, *</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>MacroTriggerType</key>
						<string>StatusMenu</string>
					</dict>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>28</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>6144</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>E4D53A86-A42D-4ACD-AB4C-3DA0BC13449F</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Markdown</string>
		<key>UID</key>
		<string>99EA1468-0BA6-4207-AA91-83620B60BF5E</string>
	</dict>
</array>
</plist>
